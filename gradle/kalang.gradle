apply plugin:'java'
sourceSets.main.allSource.srcDir("src/main/kalang")
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'site.kason.kalang:kalang-compiler:1.2.3'
  }
}

import kalang.shell.Kalangc;
class kalang implements Plugin<Project> {
    void cpKalang(project){
        def klSrc = new File(project.projectDir,"src/main/kalang")
        def outDir = new File(project.projectDir,"build/classes/java/main")
        //println "use src dir:" + klSrc.getAbsolutePath();
        //println "use out dir:" + outDir.getAbsolutePath();
        if(!klSrc.exists()){
            println("NO SOURCE");
            return;
        }
        List<String> cps = new LinkedList();
        for(f in project.configurations.compile.files){
            cps.add(f.getAbsolutePath());
        }
        String cp = String.join(";",cps);
        //println("class path:" + cp);
        def args = ["--output-dir",outDir.getAbsolutePath(),"--classpath",cp,klSrc.getAbsolutePath()];
        println("Args=" + args);
        int result = new Kalangc().run(args as String[])
        if (result!=0){
            throw new Exception("compile failed");
        }
    }
    void apply(Project project) {
        project.task('compileKalang').doLast{
            cpKalang(project);
        }
    }
}
apply plugin:kalang

processResources.dependsOn compileKalang
compileKalang.dependsOn compileJava